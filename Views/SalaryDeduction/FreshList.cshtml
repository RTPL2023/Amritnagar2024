@model Amritnagar.Models.ViewModel.FreshListViewModel

@{
    ViewBag.Title = "FreshList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .size {
        width: 150px;
        height: 25px;
    }

    .sizeM {
        width: 100px;
        height: 25px;
    }

    .sizeS {
        width: 50px;
        height: 25px;
    }

    .sizeL {
        width: 180px;
        height: 25px;
    }

    .sizebig {
        width: 230px;
        height: 25px;
    }

    .heading {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        color: saddlebrown;
        font-size: 30px;
        text-align: center;
    }

    .tab {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 12px;
        border-collapse: collapse;
        width: 900px;
        margin-left: auto;
        margin-right: auto;
    }

        .tab tbody {
            display: block;
            width: 900px;
            overflow: auto;
            height: 120px;
            text-align: center;
        }

        .tab td, .tab th {
            border: 1px solid #ddd;
            padding: 8px;
            border-collapse: collapse;
            width: 900px;
        }

        .tab tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .tab tr:hover {
            background-color: rgba(255, 182, 193, 0.2);
        }

        .tab th {
            padding: 8px;
            text-align: center;
            /*background-color: #04AA6D;*/
            background-color: firebrick;
            font-size: 12px;
            color: white;
            position: sticky;
            top: 0;
        }
        .tab1 {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 12px;
        border-collapse: collapse;
        width: 520px;
        margin-left: auto;
        margin-right: auto;
    }

        .tab1 tbody {
            display: block;
            width: 520px;
            overflow: auto;
            height: 200px;
            text-align: center;
        }

        .tab1 td, .tab1 th {
            border: 1px solid #ddd;
            padding: 8px;
            border-collapse: collapse;
            width: 520px;
        }

        .tab1 tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .tab1 tr:hover {
            background-color: rgba(255, 182, 193, 0.2);
        }

        .tab1 th {
            padding: 8px;
            text-align: center;
            /*background-color: #04AA6D;*/
            background-color: firebrick;
            font-size: 12px;
            color: white;
            position: sticky;
            top: 0;
        } 
        .tab2 {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 12px;
        border-collapse: collapse;
        width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

            .tab2 tbody {
                display: block;
                width: 400px;
                overflow: auto;
                height: 200px;
                text-align: center;
            }

            .tab2 td, .tab2 th {
                border: 1px solid #ddd;
                padding: 8px;
                border-collapse: collapse;
                /*width: 100%;*/
            }

        .tab2 tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .tab2 tr:hover {
            background-color: rgba(255, 182, 193, 0.2);
        }

        .tab2 th {
            padding: 8px;
            text-align: center;
            /*background-color: #04AA6D;*/
            background-color: firebrick;
            font-size: 12px;
            color: white;
            position: sticky;
            top: 0;
        }

    input {
        background-color: rgb(226,148,91,0.2)
    }

    select {
        background-color: rgb(226,148,91,0.2)
    }

    input:focus {
        background-color: rgba( 226,148,91, 0.6);
    }

    select:focus {
        background-color: rgba(226,148,91, 0.6);
    }


    .border-right {
        border-right: 1px solid black;
    }

    .border-top {
        border-top: 1px solid black;
    }

    .textHead {
        background-color: maroon;
        color: gold;
        font-family: 'Times New Roman';
        font-size: 13px;
        padding-top: 5px;
        padding-bottom: 5px
    }

    .divBorder {
        border: 1px solid gray;
    }

    .divText {
        font-size: 12px;
        font-weight: bold;
        background-color: white;
        z-index: 100;
        margin-top: -10px;
        color: firebrick;
        text-align: center
    }
</style>
<form asp-controller="SalaryDeduction" asp-action="FreshList" method="post" enctype="multipart/form-data">
    <div class="container" style="height:60px">

    </div>
    <div class="heading mt-4">
        Fresh List
    </div>
    <div class="container mt-2" style="margin-bottom:15px">
        <div class="row justify-content-md-center">
            <div class="col-lg-11 col-md-11 col-sm-12 col-12 border border-1 rounded border-danger" style="width:1000px">
                <div class="row mt-2">
                    <div class="col-lg-7 col-md-7 col-sm-12 col-12">
                        <div class="row mt-2">
                            <div class="col-lg-5 col-md-5 col-sm-12 col-12">
                                Recovery Date:
                                @Html.TextBoxFor(model => model.rec_dt, new { @class = "sizeM", @type = "text" })
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Book No.:
                                @Html.TextBoxFor(model => model.book_no, new { @class = "sizeS", @type = "text" })
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                                <input id="BtnRefresh" type="button" name="BtnRefresh" Height="40" Width="100" class="btn btn-primary btn-sm" value="Refresh" onclick="ShowTable()" />
                            </div>

                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-7 col-md-7 col-sm-12 col-12">
                                Unit:
                                @Html.DropDownListFor(model => model.emp_branch, new SelectList(Model.EmpBranchDesc, "Value", "Text"), "Select Unit", new { @class = "sizebig" })
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-12 col-12">
                                <input id="BtnPrintFreshList" type="button" name="BtnPrintFreshList" Height="40" Width="100" class="btn btn-primary btn-sm pull-right" value="Print FreshList" onclick="DownloadTextFilesForFreshList()" />
                            </div>
                            <div class="col-lg-1 col-md-1 col-sm-12 col-12">
                                <input id="BtnPrint" type="button" name="BtnPrint" Height="40" Width="100" class="btn btn-primary btn-sm" value="Print" />
                            </div>

                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center">
                                <img id="loading" src="~/wwwroot/Images/LoadingGif.gif" height="100" width="200" />
                                <div class="table-responsive">
                                    <table id="DetailList" class="tab1">
                                    </table>
                                </div>
                            </div>
                        </div>
                       
                        
                    </div>
                    <div class="col-lg-5 col-md-5 col-sm-12 col-12">
                        <div class="row mt-2">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-12 divBorder">
                                <div class="row mt-1">
                                    <div class="col-lg-6 col-md-6 col-sm-12 col-12 divText">
                                        Lic Premium List Generate
                                    </div>
                                </div>
                                <div class="row mt-1">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                        From Date:
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-12 col-12">
                                        @Html.TextBoxFor(model => model.fr_dt, new { @class = "sizeM", @type = "text" })
                                    </div>
                                    <div class="col-lg-1 col-md-1 col-sm-12 col-12">
                                        <input id="BtnRefresh" type="button" name="BtnRefresh" Height="40" Width="100" class="btn btn-primary btn-sm" value="Refresh" onclick="ShowTableForLicPrimium()" />
                                    </div>
                                </div>
                                <div class="row mt-1">
                                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                        To Date:
                                    </div>
                                    <div class="col-lg-5 col-md-6 col-sm-12 col-12">
                                        @Html.TextBoxFor(model => model.to_dt, new { @class = "sizeM", @type = "text" })
                                    </div>
                                    <div class="col-lg-1 col-md-1 col-sm-12 col-12">
                                        <input id="BtnPrintLic" type="button" name="BtnPrintLic" Height="40" Width="100" class="btn btn-primary btn-sm" value="Print Lic" onclick="DownloadTextFilesForLicPrimium()" />
                                    </div>
                                </div>
                                <div class="row mt-2 mb-1">
                                    <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                                        DOB Calculation on:<br />
                                        @Html.TextBoxFor(model => model.dob, new { @class = "sizeM", @type = "text" })
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                                        Percentage:<br />
                                        @Html.TextBoxFor(model => model.percnt, new { @class = "sizeM", @type = "text" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-3 col-md-3 col-sm-12 col-12">
                                Edit Age:<br />
                                @Html.TextBoxFor(model => model.edit_age, new { @class = "sizeS", @type = "text" })
                            </div>
                            <div class="col-lg-5 col-md-5 col-sm-12 col-12">
                                PAN No.:<br />
                                @Html.TextBoxFor(model => model.pan_no, new { @class = "size", @type = "text" })
                            </div>
                            <div class="col-lg-1 col-md-1 col-sm-12 col-12 mt-3">
                                <input id="BtnUpdate" type="button" name="BtnUpdate" Height="40" Width="100" class="btn btn-primary btn-sm" value="Update" onclick="UpdateAge()" />
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.mem_no, new { @class = "sizeS", @type = "text" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center"> 
                                <img id="loading1" src="~/wwwroot/Images/LoadingGif.gif" height="100" width="200" />
                                    <table id="LicPrimiumList" class="tab2">
                                    </table>                               
                            </div>
                        </div>
                    </div>
                </div>

                    <div class="row mt-2">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12" style="color:firebrick;font-size:16px;font-weight:bold">
                            Total Position At a Glance
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center">
                            <div class="table-responsive">
                                <table id="TotalPositionList" class="tab">
                                </table>
                            </div>
                        </div>
                    </div>
               
                <div class="row">
                    <div class="col-lg-7 col-md-7 col-sm-12 col-12">
                        <div class="row mt-3">
                            <div class="col-lg-2 col-md-2 col-sm-12 col-12">

                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Premium For The Year:
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.premium_yr, new { @class = "sizebig", @type = "text" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-lg-2 col-md-2 col-sm-12 col-12">

                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Contact No.:
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.contc_no, new { @class = "sizebig", @type = "text" })
                            </div>
                        </div>
                        <div class="row mt-2 mb-2">
                            <div class="col-lg-2 col-md-2 col-sm-12 col-12">

                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Email Id:
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.email, new { @class = "sizebig", @type = "text" })
                            </div>
                        </div>
                    </div>

                       
                    </div>
                </div>
        </div>
    </div>
    <div class="container" style="height:60px">

    </div>
</form>

@section scripts
{
    <script type="text/javascript" src="~/Content/lib/bootstrap/dist/js/bootstrap-datepicker.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $("#mem_no").hide();
            $("#loading").hide();
            $("#loading1").hide();
            $("#rec_dt").focus();
        });

        function ShowTable() {
            $("#loading").show();
           let ModelObject = { emp_branch: $('#emp_branch').val(), book_no: $('#book_no').val(), rec_dt: $('#rec_dt').val()};
                    $.ajax({
                    type: "POST",
                         url: '@Url.Action("getfreshlistbyempbranchbooknoanddate", "SalaryDeduction")',
                        data: ModelObject,
                        dataType: "json",
                        success: function (data) {
                        $("#loading").hide();
                        document.getElementById("DetailList").innerHTML = data.tableelement;
                        ShowTableForTotalPosition();
                    },
                     error: function (err) {
                    //alert("Error Occured");
                     }
                    });
        }

       function ShowTableForTotalPosition() {
           let ModelObject = { emp_branch: $('#emp_branch').val(), book_no: $('#book_no').val(), rec_dt: $('#rec_dt').val()};
                    $.ajax({
                    type: "POST",
                         url: '@Url.Action("gettotalpositionlist", "SalaryDeduction")',
                        data: ModelObject,
                        dataType: "json",
                    success: function (data) {
                        document.getElementById("TotalPositionList").innerHTML = data.tableelement;
                    },
                     error: function (err) {
                    //alert("Error Occured");
                     }
                    });
        }

        function ShowTableForLicPrimium() {
            $("#loading1").show();
            let ModelObject = { fr_dt: $('#fr_dt').val(), to_dt: $('#to_dt').val(), dob: $('#dob').val()};
                    $.ajax({
                    type: "POST",
                         url: '@Url.Action("getloandetailsbydaterange", "SalaryDeduction")',
                        data: ModelObject,
                        dataType: "json",
                        success: function (data) {
                            $("#loading1").hide();
                        document.getElementById("LicPrimiumList").innerHTML = data.tableelement;
                    },
                     error: function (err) {
                    //alert("Error Occured");
                     }
                    });
        }

       (function () {
            if (window.addEventListener) {
                window.addEventListener('load', run, false);
            }
            else if (window.attachEvent) {
                window.attachEvent('onload', run);
            }

            function run() {
                var t = document.getElementById('LicPrimiumList');
                t.onclick = function (event) {
                    event = event || window.event;
                    var target = event.target || event.srcElement;
                    while (target && target.nodeName != 'TR') {
                        target = target.parentElement;
                    }

                    var cells = target.cells;
                    if (!cells.length || target.parentNode.nodeName == 'THEAD') {
                        return;
                    }

                    var f1 = document.getElementById('edit_age');
                    var f2 = document.getElementById('mem_no');

                    f1.value = cells[2].innerHTML;
                    f2.value = cells[3].innerHTML;
                };
            }
        })();

       function UpdateAge() {
                let ModelObject = {
                    edit_age: $('#edit_age').val(),
                    mem_no: $('#mem_no').val(),
                    };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Update", "SalaryDeduction")',
                        data: ModelObject,
                        dataType: "json",
                        success: function (data) {
                            alert(data);                            
                        },
                        error: function (err) {
                            alert("Error Occured");
                        }
                    });
       }

        function DownloadTextFilesForLicPrimium() {
            window.location.href = "@Url.Action("getlicprimiumlistprintfile", "SalaryDeduction")" + "?fr_dt=" + $('#fr_dt').val() + "&to_dt=" + $('#to_dt').val() + "&premium_yr=" + $('#premium_yr').val() + "&contc_no=" + $('#contc_no').val() + "&email=" + $('#email').val() + "&pan_no=" + $('#pan_no').val();
        }

        function DownloadTextFilesForFreshList() {
            window.location.href = "@Url.Action("getfreshlistprintfile", "SalaryDeduction")" + "?rec_dt=" + $('#rec_dt').val() + "&book_no=" + $('#book_no').val() + "&emp_branch=" + $('#emp_branch').val();
        }

    </script>
}