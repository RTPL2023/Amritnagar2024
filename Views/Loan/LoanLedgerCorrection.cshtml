@model Amritnagar.Models.ViewModel.LoanLedgerCorrectionViewModel

@{
    ViewBag.Title = "LoanLedgerCorrection";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .size {
        width: 150px;
        height: 25px;
    }

    .sizeM {
        width: 100px;
        height: 25px;
    }

    .sizeSmall {
        width: 50px;
        height: 25px;
    }

    .sizeL {
        width: 180px;
        height: 25px;
    }

    .sizebig {
        width: 200px;
        height: 25px;
    }

    .heading {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        color: saddlebrown;
        font-size: 30px;
        text-align: center;
    }

    .tab {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 12px;
        border-collapse: collapse;
        width: 1000px;
        margin-left: auto;
        margin-right: auto;
    }

        .tab tbody {
            display: block;
            width: 1000px;
            overflow: auto;
            height: 200px;
            text-align: center;
        }

        .tab td, .tab th {
            border: 1px solid #ddd;
            padding: 8px;
            border-collapse: collapse;
            width: 1000px;
        }

        .tab tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .tab tr:hover {
            background-color: rgba(255, 182, 193, 0.2);
        }

        .tab th {
            padding: 8px;
            text-align: center;
            /*background-color: #04AA6D;*/
            background-color: firebrick;
            font-size: 12px;
            color: white;
            position: sticky;
            top: 0;
        }

    input {
        background-color: rgb(226,148,91,0.2)
    }

    select {
        background-color: rgb(226,148,91,0.2)
    }

    input:focus {
        background-color: rgba( 226,148,91, 0.6);
    }

    select:focus {
        background-color: rgba(226,148,91, 0.6);
    }

</style>
<form asp-controller="Loan" asp-action="LoanLedgerCorrection" method="post" enctype="multipart/form-data">
    <div class="container" style="height:70px">

    </div>
    <div class="heading mt-4">
        Loan Ledger Correction
    </div>
    <div class="container mt-2" style="margin-bottom:15px">
        <div class="row justify-content-md-center">
            <div class="col-lg-11 col-md-11 col-sm-12 col-12 border border-1 rounded border-danger" style="width:1000px">
                <div class="row mt-2">
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                        Branch:<br />
                        @Html.DropDownListFor(model => model.branch_id, new SelectList(Model.BranchDesc, "Value", "Text"), new { @class = "sizebig" })
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                        Loan Type:<br />
                        @Html.DropDownListFor(model => model.ac_hd, new SelectList(Model.lntypedesc, "Value", "Text"), "Select Loan Type", new { @class = "sizebig" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Man Number:<br />
                        @Html.TextBoxFor(model => model.emp_id, new { @class = "size", @type = "text" })
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-12 col-12 mt-3">
                        <input id="BtnRefresh" type="button" name="BtnRefresh" Height="40" Width="100" class="btn btn-primary btn-sm" value="Refresh" onclick="ShowTable()" />
                    </div>
                </div>
                <hr />
                <div class="row mt-2">
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Date:<br />
                        @Html.TextBoxFor(model => model.date, new { @class = "sizeM", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Vch No.:<br />
                        @Html.TextBoxFor(model => model.vch_no, new { @class = "sizeM", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Print Amount:<br />
                        @Html.TextBoxFor(model => model.prnt_amt, new { @class = "sizeM", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Print Balance:<br />
                        @Html.TextBoxFor(model => model.prnt_bal, new { @class = "sizeM", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Chq No.:<br />
                        @Html.TextBoxFor(model => model.chq_no, new { @class = "sizeM", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Chq Dt:<br />
                        @Html.TextBoxFor(model => model.chq_dt, new { @class = "sizeM", @type = "text" })
                    </div>
                </div>
                <div class="row mt-2 mb-3">
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Vch Type:<br />
                        @Html.TextBoxFor(model => model.vch_type, new { @class = "sizeM", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Vch Srl.:<br />
                        @Html.TextBoxFor(model => model.vch_srl, new { @class = "sizeM", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Dr Cr:<br />
                        @Html.TextBoxFor(model => model.drcr, new { @class = "sizeM", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Int. Amount:<br />
                        @Html.TextBoxFor(model => model.int_amt, new { @class = "size", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Int. Balance:<br />
                        @Html.TextBoxFor(model => model.int_bal, new { @class = "size", @type = "text" })
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        Bank CD:<br />
                        @Html.TextBoxFor(model => model.bank_cd, new { @class = "sizeM", @type = "text" })
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center" style="background-color:lightblue;color:darkblue;text-transform:uppercase">
                        L o a n &nbsp;&nbsp; T r a n s a c t i o n &nbsp;&nbsp; D e t a i l s
                    </div>
                </div>
                <div class="row mt-1">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center">
                        <div class="table-responsive mt-1">
                            <table id="LoanTransactionDetailsList" class="tab">
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row mt-2 mb-3 justify-content-center">

                    <div class="col-lg-1 col-md-1 col-sm-12 col-12">
                        <input id="BtnSave" type="button" name="BtnSave" Height="40" Width="100" class="btn btn-danger btn-sm" value="Save" onclick="Save()" />
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-12 col-12">
                        <input id="BtnReBal" type="button" name="BtnReBal" Height="40" Width="100" class="btn btn-danger btn-sm" value="Rebalance" onclick="Rebalance()" />
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-12 col-12">
                        <input id="BtnDelete" type="button" name="BtnDelete" Height="40" Width="100" class="btn btn-danger btn-sm pull-right" value="Delete" onclick="Delete()" />
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12 text-center">
                        <input id="BtnAddRec" type="button" name="BtnAddRec" Height="40" Width="100" class="btn btn-danger btn-sm" value="Add Records" />
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-12 col-12">
                        <input id="BtnExit" type="button" name="BtnExit" Height="40" Width="100" class="btn btn-danger btn-sm" value="Exit" onclick="ReloadPage()" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts
{
    <script type="text/javascript" src="~/Content/lib/bootstrap/dist/js/bootstrap-datepicker.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

        });

        function ShowTable() {
            let ModelObject = { branch_id: $('#branch_id').val(), ac_hd: $('#ac_hd').val(), emp_id: $('#emp_id').val()};
                    $.ajax({
                    type: "POST",
                         url: '@Url.Action("GetloanTransactionDetailsBybranchidloantypeandemployeeid", "Loan")',
                        data: ModelObject,
                        dataType: "json",
                    success: function (data) {
                        document.getElementById("LoanTransactionDetailsList").innerHTML = data.tableelement;
                    },
                     error: function (err) {
                    //alert("Error Occured");
                     }
                    });
        }

        (function () {
            if (window.addEventListener) {
                window.addEventListener('load', run, false);
            }
            else if (window.attachEvent) {
                window.attachEvent('onload', run);
            }

            function run() {
                var t = document.getElementById('LoanTransactionDetailsList');
                t.onclick = function (event) {
                    event = event || window.event;
                    var target = event.target || event.srcElement;
                    while (target && target.nodeName != 'TR') {
                        target = target.parentElement;
                    }

                    var cells = target.cells;
                    if (!cells.length || target.parentNode.nodeName == 'THEAD') {
                        return;
                    }
                    var f1 = document.getElementById('date');
                    var f2 = document.getElementById('vch_no');
                    var f3 = document.getElementById('vch_srl');
                    var f4 = document.getElementById('vch_type');
                    var f5 = document.getElementById('drcr');
                    var f6 = document.getElementById('prnt_amt');
                    var f7 = document.getElementById('int_amt');
                    var f8 = document.getElementById('prnt_bal');
                    var f9 = document.getElementById('int_bal');
                    var f10 = document.getElementById('chq_no');
                    var f11 = document.getElementById('chq_dt');
                    var f12 = document.getElementById('bank_cd')

                    f1.value = cells[1].innerHTML;
                    f2.value = cells[2].innerHTML;
                    f3.value = cells[3].innerHTML;
                    f4.value = cells[4].innerHTML;
                    f5.value = cells[5].innerHTML;;
                    f6.value = cells[6].innerHTML;;
                    f7.value = cells[7].innerHTML;;
                    f8.value = cells[8].innerHTML;;
                    f9.value = cells[9].innerHTML;;
                    f10.value = cells[10].innerHTML;;
                    f11.value = cells[11].innerHTML;;
                    f12.value = cells[12].innerHTML;;
                };
            }
        })();

         function Save() {
                    let ModelObject = {
                        date: $('#date').val(),
                        vch_no: $('#vch_no').val(),
                        vch_srl: $('#vch_srl').val(),
                        vch_type: $('#vch_type').val(),
                        drcr: $('#drcr').val(),
                        prnt_amt: $('#prnt_amt').val(),
                        int_amt: $('#int_amt').val(),
                        prnt_bal: $('#prnt_bal').val(),
                        int_bal: $('#int_bal').val(),
                        chq_no: $('#chq_no').val(),
                        chq_dt: $('#chq_dt').val(),
                        bank_cd: $('#bank_cd').val(),
                        branch_id: $('#branch_id').val(),
                        ac_hd: $('#ac_hd').val(),
                        emp_id: $('#emp_id').val(),
                    };
                    /*alert(JSON.stringify(ModelObject));*/
                    $.ajax({
                        url: '@Url.Action("SaveLoanLedgerModification", "Loan")',
                        type: "POST",
                        data: ModelObject,
                        dataType: "json",
                        success: function (data) {
                            alert(data);
                            Rebalance();
                            ShowTable();
                        },
                        error: function (err) {
                            alert("Error Occured");
                        }
                    });
         }

         function Rebalance() {
                    let ModelObject = {
                        branch_id: $('#branch_id').val(),
                        ac_hd: $('#ac_hd').val(),
                        emp_id: $('#emp_id').val(),
                    };
                    /*alert(JSON.stringify(ModelObject));*/
                    $.ajax({
                        url: '@Url.Action("UpdateLoanLedger", "Loan")',
                        type: "POST",
                        data: ModelObject,
                        dataType: "json",
                        success: function (data) {
                            alert(data);
                            ShowTable();
                        },
                        error: function (err) {
                            alert("Error Occured");
                        }
                    });
        }

        function Delete() {
            alert("Record will be deleted permanently. Confirm..........");
            let ModelObject = {
                branch_id: $('#branch_id').val(),
                ac_hd: $('#ac_hd').val(),
                emp_id: $('#emp_id').val(),
                date: $('#date').val(),
                vch_no: $('#vch_no').val(),
                vch_srl: $('#vch_srl').val(),
            };
                $.ajax({
                    type: "POST",
                         url: '@Url.Action("DeleteLedgerRecord", "Loan")',
                        data: ModelObject,
                        dataType: "json",
                        success: function (data) {
                            alert(data);
                            $('#date').val("");
                            $('#vch_no').val("");
                            $('#vch_srl').val("");
                            $('#vch_type').val("");
                            $('#drcr').val("");
                            $('#prnt_amt').val("");
                            $('#int_amt').val("");
                            $('#chq_no').val("");
                            $('#chq_dt').val("");
                            $('#bank_cd').val("");
                            $('#prnt_bal').val("");
                            $('#int_bal').val("");
                            Rebalance();
                            ShowTable();
                        },
                         error: function (err) {
                         }
                });
        }

         function ReloadPage() {
            window.location.href = "@Url.Action("LoanLedgerCorrection", "Loan")"
         }
    </script>
}
