@model Amritnagar.Models.ViewModel.ShareLedgerStatementViewModel

@{
    ViewBag.Title = "ShareLedgerStatement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .size {
        width: 180px;
        height: 25px;
    } 
    .size_etsc {
        width: 180px;
        height: 25px;
        background-color:white;
        color:black
    }

    .size1 {
        width: 150px;
        height: 25px;
    }

    .sizeM {
        width: 100px;
        height: 25px;
    }

    .sizeS {
        width: 50px;
        height: 25px;
    }

    .sizeL {
        width: 180px;
        height: 25px;
    }

    .sizebig {
        width: 300px;
        height: 25px;
    }

    .heading {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        color: saddlebrown;
        font-size: 30px;
        text-align: center;
    }

    table.bordered {
        border-collapse: collapse;
        font-size: 12px;
    }

        table.bordered td, table.bordered th {
            border: 1px solid black;
            text-align: center;
            padding: 8px;
        }

    .tab {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 12px;
        border-collapse: collapse;
         width: 960px;
        margin-left: auto;
        margin-right: auto;
    }

        .tab tbody {
            display: block;
            width: 960px;
            overflow: auto;
            height: 150px;
            text-align: center;
        }

        .tab td, .tab th {
            border: 1px solid #ddd;
            padding: 8px;
            border-collapse: collapse;
            width: 960px;
        }

        .tab tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .tab tr:hover {
            background-color: rgba(255, 182, 193, 0.2);
        }

        .tab th {
            padding: 8px;
            text-align: center;
            /*background-color: #04AA6D;*/
            background-color: firebrick;
            font-size: 12px;
            color: white;
            position: sticky;
            top: 0;
        }
        .tab1 {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 12px;
        border-collapse: collapse;
        /* width: 1000px;*/
        margin-left: auto;
        margin-right: auto;
    }

        .tab1 tbody {
            display: block;
            /* width: 1000px;*/
            overflow: auto;
            height: 120px;
            text-align: center;
        }

        .tab1 td, .tab1 th {
            border: 1px solid #ddd;
            padding: 8px;
            border-collapse: collapse;
            /* width: 1000px;*/
        }

        .tab1 tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .tab1 tr:hover {
            background-color: rgba(255, 182, 193, 0.2);
        }

        .tab1 th {
            padding: 8px;
            text-align: center;
            /*background-color: #04AA6D;*/
            background-color: firebrick;
            font-size: 12px;
            color: white;
            position: sticky;
            top: 0;
        }

    input {
        background-color: rgb(226,148,91,0.2)
    }

    select {
        background-color: rgb(226,148,91,0.2)
    }

    input:focus {
        background-color: rgba( 226,148,91, 0.6);
    }

    select:focus {
        background-color: rgba(226,148,91, 0.6);
    }

    .border-right {
        border-right: 1px solid black;
    }

    .border-top {
        border-top: 1px solid black;
    }

    .textHead {
        background-color: maroon;
        color: gold;
        font-family: 'Times New Roman';
        font-size: 13px;
        padding-top: 5px;
        padding-bottom: 5px
    }

    .divBorder {
        border: 1px solid gray;
    }

    .divText {
        font-size: 12px;
        font-weight: bold;
        background-color: white;
        z-index: 100;
        margin-top: -10px;
        color: firebrick;
        text-align: center
    }
</style>
<form asp-controller="Member" asp-action="ShareLedgerStatement" method="post">
    <div class="container" style="height:70px">
    </div>
    <div class="heading mt-4">
        Share Ledger Statement
    </div>
    <div class="container mt-2">
        <div class="row justify-content-md-center">
            <div class="col-lg-12 col-md-12 col-sm-12 col-12 border border-1 rounded border-danger" style="width:1000px">
                <div class="row mt-2">
                    <div class="col-lg-8 col-md-7 col-sm-12 col-12">
                        
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        <input id="BtnRefresh" type="button" name="BtnRefresh" Height="40" Width="100" class="btn btn-primary btn-sm pull-right" value="Refresh" onclick="ShowTableForMemberDetails()" />
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                        <input id="BtnPrint" type="button" name="BtnPrint" Height="40" Width="100" class="btn btn-primary btn-sm" value="Print" onclick="DownloadTextFilesForShareLedgerDetails()" />
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                        Branch<br />
                        @Html.DropDownListFor(p => p.branch_id, new SelectList(Model.BranchDesc, "Value", "Text"), "Select", new { @class = "size" })
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                        Membership No.<br />
                        @Html.TextBoxFor(p => p.mem_no, new { @class = "size", @type = "text", @onkeypress = "javascript: return evtmem_no(event);" })
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                        Member Type <br />
                        @Html.DropDownListFor(p => p.mem_type, new SelectList(Model.TypeDesc, "Value", "Text"), "Select", new { @class = "size" })
                    </div>

                </div>
                <div class="row mt-2">
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                        Name of Member<br />
                        @Html.TextBoxFor(p => p.mem_name, new { @class = "sizebig", @type = "text" })
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                        Membership Dt.<br />
                        @Html.TextBoxFor(p => p.mem_dt, new { @class = "size", @type = "text" })
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                        Category <br />
                        @Html.DropDownListFor(p => p.cat, new SelectList(Model.CategoryDesc, "Value", "Text"), "Select", new { @class = "size" })
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-lg-5 col-md-5 col-sm-12 col-12 divBorder">
                        <div class="row mt-1">
                            <div class="col-lg-5 col-md-5 col-sm-12 col-12  divText">
                                Mailing Address
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Holding No:
                            </div>
                            <div class="col-lg-8 col-md-8 col-sm-12 col-12">

                                @Html.TextBoxFor(model => model.hold_no, new { @class = "size", @type = "text" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.mailAdd_add1, new { @class = "sizebig", @type = "text" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.mailAdd_add2, new { @class = "sizebig", @type = "text" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                                City:
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.mailAdd_city, new { @class = "sizeM", @type = "text" })
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                                Dist:
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.mailAdd_dist, new { @class = "sizeM", @type = "text" })
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                                State:
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.mailAdd_state, new { @class = "sizeM", @type = "text" })
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-12 col-12">
                                Pin:
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                @Html.TextBoxFor(model => model.mailAdd_pin, new { @class = "sizeM", @type = "text" })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-7 col-md-7 col-sm-12 col-12">
                        <div class="row mt-1">
                            <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                                Organization <br />
                                @Html.DropDownListFor(p => p.orgn, new SelectList(Model.EmpDesc, "Value", "Text"), "Select", new { @class = "size" })
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                                Unit <br />
                                @Html.DropDownListFor(p => p.unit, new SelectList(Model.EmpBranchDesc, "Value", "Text"), "Select", new { @class = "size" })
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center">
                                <div class="table-responsive mt-1">
                                    <table id="MemberDetails" class="tab1">
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Caste <br />
                                @Html.DropDownListFor(p => p.caste, new SelectList(Model.CastDesc, "Value", "Text"), "Select Caste", new { @class = "size1" })
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Sex <br />
                                @Html.DropDownListFor(model => model.sex, new SelectList(new string[] { "MALE", "FEMALE" }), "Select Sex", new { @class = "size1" })
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Religion <br />
                                @Html.DropDownListFor(model => model.relgn, new SelectList(Model.ReligionDesc, "Value", "Text"), "Select Religion", new { @class = "size1" })
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Department <br />
                                @Html.DropDownListFor(p => p.dept, new SelectList(Model.DepartmentDesc, "Value", "Text"), "Select", new { @class = "size" })
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-12 col-12">
                                Service Status <br />
                                @Html.DropDownListFor(p => p.serv_sts, new SelectList(Model.ServiceDesc, "Value", "Text"), "Select", new { @class = "size" })
                            </div>

                        </div>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center">
                        <div class="table-responsive mt-1">
                            <table id="ShareLedgerDetails" class="tab">
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row mt-1">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center">
                        <div class="table-responsive mt-1">
                            <table id="ShareLedgerLists" class="tab">
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row mb-1 p-1" style="background-color:lightcoral;color:white;font-size:14px;font-weight:bold;text-align:center">
                    <div class="col-lg-5 col-sm-12 col-12">

                    </div>
                    <div class="col-lg-4 col-sm-12 col-12">
                        Existing Total Share Capital
                    </div>
                    <div class="col-lg-3 col-sm-12 col-12">
                        @Html.TextBoxFor(p => p.ex_total_sh_cap, new { @class = "size_etsc", @type = "text", })
                    </div>
                </div>

            </div>
        </div>
    </div>
</form>

@section scripts
{
    <script type="text/javascript" src="~/Content/lib/bootstrap/dist/js/bootstrap-datepicker.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script type="text/javascript">

        function ShowTableForMemberDetails() {
             let ModelObject = { branch_id: $('#branch_id').val(), mem_no: $('#mem_no').val()};
                    $.ajax({
                    type: "POST",
                         url: '@Url.Action("GetMemberDetailsbyBranchAndMemberId", "Member")',
                        data: ModelObject,
                        dataType: "json",
                        success: function (data) {
                            if (data.tableelement == null) {
                                alert("Invalid Membership No.");
                            }
                            else {
                                document.getElementById("MemberDetails").innerHTML = data.tableelement;
                                $('#mem_type').val(data.mem_type);
                                $('#mem_name').val(data.mem_name);
                                $('#mem_dt').val(data.mem_dt);
                                $('#cat').val(data.cat);
                                $('#hold_no').val(data.hold_no);
                                $('#mailAdd_add1').val(data.mailAdd_add1);
                                $('#mailAdd_add2').val(data.mailAdd_add2);
                                $('#mailAdd_city').val(data.mailAdd_city);
                                $('#mailAdd_dist').val(data.mailAdd_dist);
                                $('#mailAdd_state').val(data.mailAdd_state);
                                $('#mailAdd_pin').val(data.mailAdd_pin);
                                $('#orgn').val(data.orgn);
                                $('#unit').val(data.unit);
                                $('#caste').val(data.caste);
                                $('#sex').val(data.sex);
                                $('#relgn').val(data.relgn);
                                $('#dept').val(data.dept);
                                $('#serv_sts').val(data.serv_sts);
                                $('#unit').val(data.unit);
                                ShowTableForShareLedgerdetails();
                                ShowTableForShareLedgerLists();
                            }                      
                        },
                     error: function (err) {
                    //alert("Error Occured");
                     }
                    });
        }

        function ShowTableForShareLedgerdetails() {
             let ModelObject = { branch_id: $('#branch_id').val(), mem_no: $('#mem_no').val()};
                    $.ajax({
                    type: "POST",
                         url: '@Url.Action("getshareledgerdetailsbymemberid", "Member")',
                        data: ModelObject,
                        dataType: "json",
                    success: function (data) {
                        document.getElementById("ShareLedgerDetails").innerHTML = data.tableelement;
                    },
                     error: function (err) {
                    //alert("Error Occured");
                     }
                    });
        }

        function ShowTableForShareLedgerLists() {
             let ModelObject = { branch_id: $('#branch_id').val(), mem_no: $('#mem_no').val()};
                    $.ajax({
                    type: "POST",
                         url: '@Url.Action("getshareledgerlistsbymemberid", "Member")',
                        data: ModelObject,
                        dataType: "json",
                    success: function (data) {
                        document.getElementById("ShareLedgerLists").innerHTML = data.tableelement;
                        $('#ex_total_sh_cap').val(data.ex_total_sh_cap);
                    },
                     error: function (err) {
                    //alert("Error Occured");
                     }
                    });
        }

        function evtmem_no(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if ((charCode < 106 || charCode > 95) && (charCode < 58 || charCode > 47) && charCode != 13 && charCode == 191 && charCode == 111 && (charCode < 65 || charCode > 90))
                return false;
            else if (charCode == 13) {
                ShowTableForMemberDetails();
                ShowTableForShareLedgerdetails();
                ShowTableForShareLedgerLists();
            }
        }

        function DownloadTextFilesForShareLedgerDetails() {
            window.location.href = "@Url.Action("ShareLedgerDetailsPrintfile", "Member")" + "?mem_no=" + $('#mem_no').val() + "&branch_id=" + $('#branch_id').val() + "&mem_type=" + $('#mem_type').val() + "&mem_name=" + $('#mem_name').val() + "&mem_dt=" + $('#mem_dt').val() + "&cat=" + $('#cat').val() + "&mailAdd_add1=" + $('#mailAdd_add1').val() + "&mailAdd_add2=" + $('#mailAdd_add2').val() + "&mailAdd_city=" + $('#mailAdd_city').val() + "&mailAdd_dist=" + $('#mailAdd_dist').val() + "&mailAdd_state=" + $('#mailAdd_state').val() + "&mailAdd_pin=" + $('#mailAdd_pin').val() + "&unit=" + $('#unit').val() + "&orgn=" + $('#orgn').val();
        }
    </script>
}


